/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditorFrame.java
 *
 * Created on May 12, 2010, 2:40:10 AM
 */

package projectai;
import java.io.*;
import java.util.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.*;

/**
 *
 * @author alcher
 */
public class EditorFrame extends javax.swing.JFrame {
    static final String fs = System.getProperty("file.separator"); //this allows for cross-platform compatability

    /** Creates new form EditorFrame */
    public EditorFrame() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        textCode = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        textDNA = new javax.swing.JTextArea();
        btnOpen = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDNAtoCode = new javax.swing.JButton();
        btnSaveAs = new javax.swing.JButton();
        txtRobotName = new javax.swing.JTextField();
        txtPath = new javax.swing.JTextField();

        setTitle("Code Viewer");

        textCode.setColumns(20);
        textCode.setEditable(false);
        textCode.setRows(5);
        jScrollPane1.setViewportView(textCode);

        textDNA.setColumns(20);
        textDNA.setRows(5);
        jScrollPane2.setViewportView(textDNA);

        btnOpen.setText("Open...");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDNAtoCode.setText("<");
        btnDNAtoCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDNAtoCodeActionPerformed(evt);
            }
        });

        btnSaveAs.setText("Save as...");
        btnSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveAsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPath, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOpen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveAs)
                        .addGap(18, 18, 18)
                        .addComponent(btnDNAtoCode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 465, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtRobotName)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtRobotName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDNAtoCode)
                        .addComponent(btnOpen)
                        .addComponent(btnSave)
                        .addComponent(btnSaveAs))
                    .addComponent(txtPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    Properties RobotFile = new Properties();
    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        textDNA.setText("");
        JFileChooser fc = new JFileChooser(System.getProperty("user.dir")+fs+"Data"+fs+"test1"+fs+"robots");
        int returnVal = fc.showOpenDialog(null);
        File f = fc.getSelectedFile();
        txtPath.setText(f.getAbsolutePath());

        //loading the file
        /*FileReader in = null;
        try {
            in = new FileReader(f);            // And a char stream to read  it
            char[] buffer = new char[4096];    // Read 4K characters at a time
            int len;                           // How many chars read each time
            textDNA.setText("");              // Clear the text area
            while((len = in.read(buffer)) != -1) { // Read a batch of chars
                String s = new String(buffer, 0, len); // Convert to a string
                textDNA.append(s);                    // And display them
            }
            this.setTitle("Loaded code file " + f.getName());  // Set the window title
            textDNA.setCaretPosition(0);              // Go to start of file
        }
        // Display messages if something goes wrong
        catch (IOException e) {
            textDNA.setText(e.getClass().getName() + ": " + e.getMessage());
            this.setTitle("Code Viewer: " + textDNA + ": I/O Exception");
        }
        // Always be sure to close the input stream!
        finally { try { if (in!=null) in.close(); } catch (IOException e) {} }*/

        //actually since it's properties, we'll do it like this
        textDNA.setText("");
        try {
            RobotFile.load(new FileInputStream(f));
        } catch (IOException ex) {
            System.out.println("Failed to load file "+f.getAbsolutePath());
        }
        txtRobotName.setText(RobotFile.getProperty("name","unspesified"));
        String s;
        s=RobotFile.getProperty("code");
        s.trim();


        while (true) {
            if ((s.indexOf(" 0")+2)<s.length()) {
            textDNA.append(s.substring(0, s.indexOf(" 0")+3)+"\n");
            s=s.substring(s.indexOf(" 0")+3, s.length());
            }
            else {
                textDNA.append(s+"\n");
                break;
            }
        }
    }//GEN-LAST:event_btnOpenActionPerformed
    Properties LanguageFile = new Properties();
    private void btnDNAtoCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDNAtoCodeActionPerformed
        textCode.setText("");
        if (textDNA.getText().isEmpty()) { textCode.append("Please load the robot code file first!");return;}

        try {
            LanguageFile.load(new FileInputStream(System.getProperty("user.dir")+fs+"Data"+fs+"genetic_syntax.txt"));
        } catch (IOException ex) {
            System.out.println("Failed to load genetic language file.");
        }

        Scanner src = new Scanner(textDNA.getText());
        ArrayList<Integer>list=new ArrayList<Integer>();
        while (src.hasNext()) {
            list.add(src.nextInt());
        }
        while (!list.isEmpty()) {
            if (String.valueOf(list.get(0)).equalsIgnoreCase("0")) {
                textCode.append("\n");
            } else textCode.append(LanguageFile.getProperty(String.valueOf(list.get(0)), "unknown")+" ");
            list.remove(0);
        }
    }//GEN-LAST:event_btnDNAtoCodeActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (textDNA.getText().isEmpty()) { textDNA.append("Nothing to save!");return;}

        String p;
        p=textDNA.getText();
        
        p = p.replaceAll("[\n\r]+", " ");
        p = p.replaceAll("  ", " ");
        //p = p.replaceAll("01", "0 1"); //аццкий костыль
        RobotFile.setProperty("code", p);
        RobotFile.setProperty("name", txtRobotName.getText());
        try {
            RobotFile.store(new FileOutputStream(txtPath.getText()),null);
            JOptionPane.showMessageDialog(null,"Saved!");
        } catch (IOException ex) {
            System.out.println("Failed to save robot code file.");
            JOptionPane.showMessageDialog(null,"Failed to save robot code file.");
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveAsActionPerformed
        JFileChooser fc = new JFileChooser(System.getProperty("user.dir")+fs+"Data"+fs+"test1"+fs+"robots");
        int returnVal = fc.showOpenDialog(null);
        File f = fc.getSelectedFile();
        txtPath.setText(f.getAbsolutePath());
        btnSaveActionPerformed(null);
    }//GEN-LAST:event_btnSaveAsActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditorFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDNAtoCode;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveAs;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea textCode;
    private javax.swing.JTextArea textDNA;
    private javax.swing.JTextField txtPath;
    private javax.swing.JTextField txtRobotName;
    // End of variables declaration//GEN-END:variables

}
